---
title: "Introduction to Optimization"
subtitle: "Lecture 14"
author: "Vivek Srikrishnan"
course: "BEE 4750"
institution: "Cornell University"
date: "September 25, 2023"
format:
    revealjs:
        slide-number: c/t
        show-slide-number: all
        center-title-slide: true
        width: 1280
        height: 720
        transition: none
        toc: true
        toc-depth: 1
        toc-title: "Overview"
        history: false
        link-external-newwindow: true
        theme: ../sass/slides.scss
        footer: "[BEE 4750, Environmental Systems Analysis](https://viveks.me/environmental-systems-analysis)"
        template-partials:
            - title-slide.html
        menu:
            numbers: true
        html-math-method: mathjax
        include-in-header: mathjax-config.html
        date-format: long
        highlight-style: tango
        code-line-numbers: false

execute:
    freeze: auto
---

```{julia}
#| echo: false
#| output: false

import Pkg
Pkg.activate(".")
Pkg.instantiate()
```

```{julia}
#| echo: false
#| output: false

using Measures
using Random
using Distributions
using Plots
using StatsPlots
using LaTeXStrings

Random.seed!(1)
```

# Review and Questions

## Last Class

- Decision models involve objectives and constraints.
- **Objective**: 
  - How are we assessing performance? (the **metric**)
  - Do we want to maximize or minimize?
- **Constraints**:
  - What are eligible decisions?
  - Engineering restrictions, performance or regulatory standards, etc.

## Questions?

{{< include _poll-prompt.qmd >}}

# Solving Our Wastewater Model

## Wastewater Treatment Model

Last class, we derived the following model for the treatment of wastewater from two point releases:

$$\begin{alignat}{3}
& \min_{E_1, E_2} &\quad  5000E_1^2 + 3000E_2^2 &  \\\\
& \text{subject to:} & 1000 E_1 &\geq 500 \\
& & 835E_1 + 1200E_2 &\geq 1459 \\
& & E_1, E_2 &\;\geq 0 \\
& & E_1, E_2 &\;\leq 1
\end{alignat}$$


## Solving This Problem

:::: {.columns}

::: {.column width=40%}
We can solve this graphically (see [the JuMP tutorial](../tutorials/julia-jump.html#visualizing-the-problem) for example code):

:::
::: {.column width=60%}

```{julia}
#| echo: false
#| fig-width: 6in

# define objective function
a = range(0, 1, step=0.05)
b = range(0, 1, step=0.05)
f(a, b) = 5000 * a.^2 + 3000 * b.^2
# plotting contours
contour(a,b,(a,b)->f(a,b), nlevels=15, 
  c=:heat, linewidth=5, colorbar = false, 
  contour_labels = true, grid = false, 
  right_margin=8mm, tickfontsize=16, legendfontsize=14, guidefontsize=16) 
xaxis!(L"E_1", ticks=0:0.1:1, 
  limits=(0, 1))
yaxis!(L"E_2", ticks=0:0.1:1, 
  limits=(0, 1))
plot!(size=(700, 600))

# plot constraints
vline!([0.5], color=:green, linewidth=3,
  label=false) # Equation 2
plot!(a, (1459 .- 835 .* a) ./ 1200, 
  color=:green, linewidth=3,
  label=false) # Equation 3
# plot feasible region
fa = a[a .>= 0.5]
fb = (1459 .- 835 .* a[a .>= 0.5])./1200
plot!(fa, fb, fillrange=1, 
  label="Feasible Region", opacity=0.4, 
  color=:green, legend=:bottomleft)
scatter!([0.5], [(1459 - 835 * 0.5) / 1200],
  markershape=:circle, color=:blue, 
  markersize=10, label="Optimum")
```
:::
::::

## The Solution

So the solution occurs at the intersection of the two constraints, where:

$$E_1 = 0.5, E_2 = 0.85$$

and the cost of this treatment plan is 

$$C(0.5, 0.85) = \$ 3417.$$

::: {.fragment .fade-in}
**Does this solution make sense**?
:::

# Waste Load Allocation Problems

## Waste Load Allocation

This is an example of a *waste load allocation* problem.

**Key question**: How do we restrict waste discharges to control or limit environmental impact?

## Waste Load Allocation Schematic

![Environmental Systems Model Schematic](images/system-environmental.svg)

Each source is allocated a "load" they can discharge based on waste fate and transport.

## Waste Load Allocation Model

Waste loads affect quality $Q$ based on fate & transport model: 

$$Q=f(W_1, W_2, \ldots, W_n)$$

::: {.fragment .fade-in}
So the general form for a prescriptive waste load allocation model:

$$\begin{aligned}
\text{determine} & \quad  W_1, W_2, \ldots, W_n \notag \\\\
\text{subject to:} & \quad f(W_1, W_2, \ldots, W_n) \geq Q^* \notag
\end{aligned}$$
:::

# Optimization Models

## Components of an Optimization Model

  * **Objective Function**: The "target" function to be optimized.
  * **Decision Variables**: Variables which can be changed to affect objective.
  * **Constraints**: Limits on decision variable values.
  * **Feasible Solution**: Decision variable values satisfying constraints.
  * **Optimal Solution**: The "best" feasible solution or solutions (with respect to the objective)

## How Do We Solve An Optimization Problem?

{{< include _poll-prompt.qmd >}}

## Solution Approach 1: Trial and Error

What are some challenges to trial and error?

::: {.fragment .fade-in}

- Many possible solutions (infinitely many when a problem is continuous)
- Feasible region may not be intuitive
- How do we know when we've found an optimal solution?
:::

## Solution Approach 2: Generalized Search Algorithms

:::: {.columns}
::: {.column width=50%}

![Function with Multiple Minima](images/multiple-optima.svg)
:::

::: {.column width=50%}
Most search algorithms look for critical points to find candidate optima. Then the "best" of the critical points is the **global optimum**.
:::

::::


## Solution Approach 2: Generalized Search Algorithms

:::: {.columns}
::: {.column width=50%}

![Function with Multiple Minima](images/multiple-optima.svg)
:::

::: {.column width=50%}
Two common approaches:

- **Gradient-based methods**
- **Evolutionary algorithms**

:::

::::

## Solution Approach 2: Generalized Search Algorithms

:::: {.columns}
::: {.column width=50%}

![Function with Multiple Minima](images/multiple-optima.svg)
:::

::: {.column width=50%}
These methods work pretty well, but can require a lot of evaluations and/or may get stuck at local optima.
:::

::::


# Key Takeaways

## Key Takeaways

- We solve decision models through **optimization**.
- Decision models have a standard structure:
  - Decision Variables
  - Objective
  - Constraints
- **Goal**: find "best" solution with respect to the objective that is feasible.

# Upcoming Schedule

## Next Classes

**Monday**: Constrained optimization and solving linear models (linear programming)

**Wednesday**: Example of formulating and solving a linear program.

**Friday**: Lab on linear programming in Julia.