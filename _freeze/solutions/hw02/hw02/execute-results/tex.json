{
  "hash": "947654ccf12998d4c0ee53476127777d",
  "result": {
    "engine": "julia",
    "markdown": "---\ntitle: \"Homework 2 Solutions\"\nformat:\n    html:        \n        warning: true\n        error: true\n    ipynb:\n        warning: true\n        error: true\n        code-annotation: below\n    pdf:\n        include-in-header: \n           text: |\n            \\usepackage{fvextra}\n            \\DefineVerbatimEnvironment{Highlighting}{Verbatim}{breaklines,commandchars=\\\\\\{\\}}\n            \\DefineVerbatimEnvironment{OutputCode}{Verbatim}{breaklines,commandchars=\\\\\\{\\}}\nengine: julia\nformat-links: [pdf, ipynb]\n---\n\n\n\n\n\n\n\n\n::: {.callout-important icon=false}\n### Due Date\n\nThursday, 09/19/24, 9:00pm\n:::\n\n## Overview\n\n### Load Environment\n\nThe following code loads the environment and makes sure all needed packages are installed. This should be at the start of most Julia scripts.\n\n\n\n\n\n\n\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\nimport Pkg\nPkg.activate(@__DIR__)\nPkg.instantiate()\n```\n:::\n\n\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\nusing Plots\nusing LaTeXStrings\nusing CSV\nusing DataFrames\nusing Roots\n```\n:::\n\n\n\n\n\n\n\n\n\n\n## Problems (Total: 50/60 Points)\n\n\n### Problem 1 (25 points)\n\nCRUD decays exponentially at a rate of $0.36\\ \\mathrm{d}^{-1}$, so the differential equation for its mass $M$ is $$\\frac{dM}{dt} = -0.36M.$$ By separating variables, the solution to this equation is $$M(t) = M_0 \\exp(-0.36t).$$ However, we need to convert time $t$ (d) to distance $x$ (km) as the river is in steady-state. As the velocity of the river is $10\\ \\mathrm{km/d}$, $$t = \\frac{x}{10},$$ so $$M(x) = M_0 \\exp(-0.36x/10).$$ \n\nTo find the initial condition(s), we have to split the river into two different segments. The first segment goes from $x=0$ (the first wastewater discharge) to $x=15$ (the second discharge), and the initial condition satisfies $M_0 = M(0)$. To calculate this mass, we have to compute the total mass of CRUD in the combined inflow and wastewater discharge, which is \n\n\\begin{align*}\nM_0 = M(0) &= \\left(250,000 \\mathrm{m}^3/\\mathrm{d}\\right)\\left(0.5\\mathrm{kg}/(1000 \\mathrm{m}^3)\\right) + \\left(40,000 \\mathrm{m}^3/\\mathrm{d}\\right)\\left(9\\mathrm{kg}/(1000 \\mathrm{m}^3)\\right) \\\\\n&= 485 \\mathrm{kg}/\\mathrm{d}.\n\\end{align*}\n\nThe second segment starts at $x=15$ and follows the equation $$M(x) = M_1 \\exp(-0.36(x-15)/10), \\qquad x \\leq 15,$$ where the initial condition satisfies\n\n\\begin{align*}\nM_1 = M(15) &= \\left(M_0 \\exp\\left((-0.36)(15)/10\\right) \\mathrm{kg}/\\mathrm{d}\\right) + \\left(60,000 \\mathrm{m}^3/\\mathrm{d}\\right)\\left(7\\mathrm{kg}/(1000 \\mathrm{m}^3)\\right) \\\\\n&= 485\\exp(-0.54) \\mathrm{kg}/\\mathrm{d} + 420 \\mathrm{kg}/\\mathrm{d} \\\\\n&\\approx 703 \\mathrm{kg}/\\mathrm{d}.\n\\end{align*}\n\nConverting to concentration for the regulatory standard, we combine the inflow and discharge volumes to get a volume in the first segment of $290,000 \\mathrm{m}^3$ and $350,000 \\mathrm{m}^3$ in the second segment. This means that the concentration initial conditions^[You might get some variations in the specifics due to the number of significant figures you select.] are $$C_0 \\approx 1.7 \\mathrm{kg}/(1000 \\mathrm{m}^3)$$ and $$C_1 \\approx 2.0 \\mathrm{kg}/(1000 \\mathrm{m}^3).$$\n\nDenoting concentration (in $\\mathrm{kg}/(1000 \\mathrm{m}^3)$) as $C(t)$, this means the model for concentration is\n$$\nC(t) = \\begin{cases}1.7 \\exp(-0.36x/10), &\\text{if}\\ 0 \\leq x < 15 \\\\\n                    2.0 \\exp(-0.36(x-15)/10), & \\text{if}\\ x > 15.\n\\end{cases}\n$$\n\nTo determine if the system is in compliance with the regulatory standard of $2.5 \\mathrm{kg}/(1000 \\mathrm{m}^3$), notice that, as there are no sources of CRUD inbetween discharges, the maximum value in each segment occurs at the discharge locations $x=0$ and $x=15$^[We could also have written some code to simulate this model, but using this observation makes the solution simpler.]. The maximum CRUD concentration occurs at $x=15$, where $C(15) = 2.0$. As a result, the river is in compliance with the standard.\n\n### Problem 2 (25 points)\n\nFirst, let's write a function to simulate the model from $t=0, \\ldots, 30$.\n\n\n\n\n\n\n\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\n# define functions for lake recycling and outflows\nlake_P_cycling(x, q) = x.^q ./ (1 .+ x.^q);\nlake_P_out(x, b) = b .* x;\n\nT = 30\nX_vals = collect(0.0:0.1:2.5)\nfunction simulate_lake_P(X_ic, T, b, q, a, y)\n    X = zeros(T)\n    X[1] = X_ic\n    for t = 2:T\n        X[t] = X[t-1] .+ a[t] .+ y[t].+ lake_P_cycling(X[t-1], q) .- lake_P_out(X[t-1], b)\n    end\n    return X\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\nsimulate_lake_P (generic function with 1 method)\n```\n:::\n:::\n\n\n\n\n\n\n\n\n\n\nWe can then make the initial conditions plot by evaluating this function across a range of values of `X_ic` (@fig-lake-ic)\n\n\n\n\n\n\n\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\nX_vals = 0.0:0.05:2.5\n# set parameters\nT = 30\nb = 0.5\nq = 1.5\ny = zeros(T)\na = zeros(T)\n\n# evaluate model for initial values\nX = map(x -> simulate_lake_P(x, T, b, q, a, y), X_vals) # <1>\nplot(X, label=false, ylabel=L\"$X_t$\", xlabel=\"Time\")\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n![Initial conditions plot for the lake problem for values of $X_0$ between 0 and 2 with no inflows.](hw02_files/figure-pdf/fig-lake-ic-output-1.svg){#fig-lake-ic fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n\n\n\n1. The `map()` function evaluates the function in the first argument (which is here an anonymous function) over all values in an array and returns an array of the same size; in this case, we get back an array of the same size as `X_vals`, where each element in that array is a vector of length `T` with the model outputs. We could also have used broadcasting, but `map()` and its variants (such as `mapslices()`) can be more versatile when applying a function over more complex structures, such as rows and columns of matrices.\n\nTo find the equilibria, we use `Roots.find_zero()` for a function giving us the difference $X_{t+1} - X_t$, namely `lake_P_cycling(x, q) - lake_P_out(x, b)` (since we have no inflows). This function is versatile, and lets us either choose an initial point to start the search for a zero or a bounding interval. We can use @fig-lake-ic to make guesses at initial values for the search.\n\n\n\n\n\n\n\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\neq_ic = [0.0, 0.5, 2.0] # <1>\neq_noinflows = [find_zero(x -> lake_P_cycling(x, q) - lake_P_out(x, b), eq) for eq in eq_ic] # <2>\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\n3-element Vector{Float64}:\n 0.0\n 0.3819660112501051\n 1.0\n```\n:::\n:::\n\n\n\n\n\n\n\n\n\n1. These are rough guesses from a visual scan of @fig-lake-ic; they just need to be closer to the \"true\" zeroes of interest than any others.\n2. We could also have used `map()` (as above) or broadcasting, but this illustrates the use of a comprehension to achieve the same goal, evaluating the function over the values in the array `eq_ic`. You can decide what you prefer to use in the future!\n\nSo we end up with equilibria \\[0\\.0, 0\\.38, 1\\.0\\]. Of these, 0\\.0 and 1\\.0 are stable and 0\\.38 are unstable, based on @fig-lake-ic (we could make this more rigorous by calculating the derivatives of `lake_P_cycling(x, q)` and `lake_P_out(x, b)` at the equilibrium values to see how the difference is changing, but that is not required here).\n\nNow, let's repeat that analysis when $a_t=0.05$ for all $t$.\n\n\n\n\n\n\n\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\na = 0.02 .+ zeros(T) # <1>\n\n# evaluate model for initial values\nX = map(x -> simulate_lake_P(x, T, b, q, a, y), X_vals) # <1>\nplot(X, label=false, ylabel=L\"$X_t$\", xlabel=\"Time\")\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n![Initial conditions plot for the lake problem for values of $X_0$ between 0 and 2 with constant inflow $a_t=0.05$.](hw02_files/figure-pdf/fig-lake-ic-inflow-output-1.svg){#fig-lake-ic-inflow fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n\n\n\n1. This creates a vector of constant values by adding them to a zero vector; we could also do this by multiplying against a vector of ones, such as `a = 0.02 * ones(T)`.\n\n\n\n\n\n\n\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\neq_ic = [0.0, 0.5, 1.0]\neq_inflows = [find_zero(x -> lake_P_cycling(x, q) - lake_P_out(x, b) .+ a, eq) for eq in eq_ic]\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\n3-element Vector{Float64}:\n 0.11624441966074756\n 0.15442860418310414\n 1.1341008852434813\n```\n:::\n:::\n\n\n\n\n\n\n\n\n\n\nWith $a_t = 0.02$, the equilibria are \\[0\\.12, 0\\.15, 1\\.13\\], where  0\\.12 and 1\\.13 are stable and 0\\.38 are unstable, based on @fig-lake-ic-inflow. \n\nHow has the stability of the system changed? The unstable equilibrium has dropped from 0\\.38 to 0\\.15, which means a smaller disturbance to the system (such as a non-point source inflow or a change in the outflow rate) could trigger eutrophication. This is particularly true as the distance between the stable (oligotrophic) equilibrium and the unstable equilibrium has been reduced, which means moving past the unstable equilibrium is easier. Moreover, the eutrophic equilibrium is increased (by more than the 0.02 units of P that we are adding to the lake each time period), meaning that, upon eutrophication, the lake is likely to suffer from more intense consequences of higher nutrient levels, such as greater hypoxia.\n\n\n### Problem 3 (10 points)\n\nDenote by $\\beta$ the rate of atmospheric deposition in $\\mathrm{kg}/(\\mathrm{yr} \\cdot \\mathrm{m}^2)$. The atmospheric deposition input is then $\\beta A$, where $A$ is the area of the lake. The steady-state mass-balance equation becomes:\n\n\\begin{align}\n\\frac{\\partial \\text{Mass}}{\\partial t} &= Inputs - Outputs - Decay = 0 \\nonumber \\\\\n\\frac{\\partial (CV)}{\\partial t} &= \\sum_j PS_j + \\sum_i NPS_i + \\beta A - CQ_{out} - \\alpha CV = 0. \\label{eq:lake-mb}\n\\end{align}\n\nSolving \\eqref{eq:lake-mb} for $C$:\n$$C = \\frac{\\sum_j PS_j + \\sum_i NPS_i + \\beta A}{Q_\\text{out} + \\alpha V}.$$\n\nWith a constraint of $C \\leq 0.02 \\mathrm{mg}/\\mathrm{L} = 2 \\times 10^{-5} \\text{kg}/\\text{m}^3$, this means\n$$\\sum_j PS_j + \\sum_i NPS_i = \\left(2 \\times 10^{-5}\\right)\\left(Q_\\text{out} + \\alpha V\\right) - \\beta A,$$\n\nand using the Vollenweider model for sedimentation ($\\alpha \\approx 10A/V$),\n\n\\begin{align*}\n\\sum_j PS_j + \\sum_i NPS_i &= \\left(2 \\times 10^{-5}\\right)\\left(Q_\\text{out} + 10A\\right) - \\beta A \\\\\n&= \\left(2 \\times 10^{-5}\\right)Q_\\text{out} + \\left(\\left(2 \\times 10^{-4}\\right) - \\beta\\right) A.\n\\end{align*}\n\nSubbing in the parameters from class and the problem statement ($Q_\\text{out} = 400 \\times 10^6 \\text{m}^3/\\text{yr}, A = 30 \\times 10^6 \\text{m}^2$, $\\beta = 1.6 \\times 10^{-4} \\text{kg}/(\\text{yr} \\cdot \\text{m}^2), \\sum_i NPS_i = 9000 \\text{kg}/\\text{yr}$) yields\n$$\\sum_j PS_j \\leq 200 \\text{kg}/\\text{yr},$$\nwhich is the maximum allowable annual rate.\n\n::: {.cell .markdown}\n## References\n\nList any external references consulted, including classmates.\n:::\n\n",
    "supporting": [
      "hw02_files/figure-pdf"
    ],
    "filters": []
  }
}