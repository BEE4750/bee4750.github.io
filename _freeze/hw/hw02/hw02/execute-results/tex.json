{
  "hash": "bfa4226eae7168a5dd98371816be46a2",
  "result": {
    "engine": "julia",
    "markdown": "---\ntitle: \"BEE 4750 Homework 2: Systems Modeling and Simulation\"\ndate: last-modified\nformat:\n    html:        \n        warning: true\n        error: true\n    ipynb:\n        warning: true\n        error: true\n        code-annotation: below\n    pdf:\n        include-in-header: \n           text: |\n            \\usepackage{fvextra}\n            \\DefineVerbatimEnvironment{Highlighting}{Verbatim}{breaklines,commandchars=\\\\\\{\\}}\n            \\DefineVerbatimEnvironment{OutputCode}{Verbatim}{breaklines,commandchars=\\\\\\{\\}}\nexecute: \n    echo: true\nengine: julia\nformat-links: [pdf, ipynb]\n---\n\n\n\n\n\n\n\n\n::: {.content-visible when-format=\"ipynb\"}\n**Name**:\n\n**ID**:\n:::\n\n::: {.callout-important icon=false}\n### Due Date\n\nThursday, 09/19/24, 9:00pm\n:::\n\n::: {.content-visible when-format=\"html\"}\n\n:::{.callout-caution}\n\nIf you are enrolled in the course, make sure that you use the GitHub Classroom link provided in Ed Discussion, or you may not be able to get help if you run into problems.\n\nOtherwise, you can [find the Github repository here]({{< var github_org.repo >}}/hw02).\n\n:::\n\n:::\n\n## Overview\n\n### Instructions\n\n* Problem 1 asks you to derive a model for water quality in a river system and use this model to check for regulatory compliance.\n* Problem 2 asks you to discretize a simple climate model and use it to simulate global mean temperatures under a future emissions scenario.\n* Problem 3 (5750 only) asks you to modify the lake eutrophication example from Lecture 04 to account for atmospheric deposition.\n\n### Load Environment\n\nThe following code loads the environment and makes sure all needed packages are installed. This should be at the start of most Julia scripts.\n\n\n\n\n\n\n\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\nimport Pkg\nPkg.activate(@__DIR__)\nPkg.instantiate()\n```\n:::\n\n\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\nusing Plots\nusing LaTeXStrings\nusing CSV\nusing DataFrames\n```\n:::\n\n\n\n\n\n\n\n\n\n\n## Problems (Total: 50/60 Points)\n\n::: {.cell .markdown}\n\n### Problem 1 (25 points)\n\nA river which flows at 10 km/d is receiving discharges of wastewater contaminated with CRUD from two sources which are 15 km apart, as shown in the Figure below.  CRUD decays exponentially in the river at a rate of 0.36 $\\mathrm{d}^{-1}$. \n:::\n\n![Schematic of the river system in Problem 1](figures/river_diagram.png)\n\n::: {.cell .markdown}\n**In this problem**:\n\n* Assuming steady-state conditions, derive a model for the concentration of CRUD downriver by solving the appropriate differential equation(s) analytically.\n* Determine if the system in compliance with a regulatory limit of 2.5 kg/(1000 m$^3$).\n:::\n\n::: {.callout-tip}\nYour solution will need to be in terms of distance downriver.\n:::\n\n::: {.cell .markdown}\n### Problem 2 (25 points)\n\nThe simplest climate model involves capturing changes to the Earth's energy budget (it is commonly called the *energy balance model*, or EBM). These changes are also called *radiative forcings* (RF), and can result from several causes, including greenhouse gas emissions, volcanic eruptions, and changes to the solar cycle. The EBM treats the Earth as a 0-dimensional sphere covered with water, which absorbs heat in response to radiative forcings. Chanwith global temperature changes resulting from imbalances in the average (over the entire surface area) heat flux. \n\nThe EBM equations are:\n\n\\begin{align*}\n\\overbrace{\\frac{dH}{dt}}^{\\text{change in heat}} &= \\overbrace{F}^{\\substack{\\text{radiative} \\\\ \\text{forcing}}} - \\overbrace{\\lambda T}^{\\substack{\\text{change in} \\\\ \\text{temperature}}} \\\\\n\\underbrace{C}_{\\substack{\\text{ocean heat} \\\\ \\text{capacity}}} \\frac{dT}{dt} &= F - \\lambda T \\\\\nc\\underbrace{d}_{\\substack{\\text{ocean} \\\\ \\text{mixing depth}}} \\frac{dT}{dt} &= F - \\lambda T,\n\\end{align*}\n\nwhere $c = 4.184\\times 10^6 \\mathrm{J/K/m}^2$ is the specific heat of water per area, $d$ is the depth of the ocean mixed layer (we'll assume $d = 86 \\mathrm{m}$), and $\\lambda$ is the **climate feedback factor** and controls how much the Earth warms in response to increased radiative forcing (assume $\\lambda = 2.1$). The total radiative forcing $F = F_\\text{non-aerosol} + \\alpha F_\\text{aerosol}$, where $\\alpha$ is an uncertain scaling factor reflecting aerosol-cloud feedbacks (we'll assume $\\alpha = 0.8$). \n\nThe code below loads historical and projected radiative forcings (under the SSP5-8.5 future emissions scenario, which is the most extreme of the scenarios used to project climate change impacts) from `data/ERF_ssp585_1750-2500.csv` into a `DataFrame` object and calculates the non-aerosol and aerosol components of those forcings.\n\n:::\n\n::: {.callout-tip}\nLook closely at and experiment with the code below: `DataFrames` are a common Julia datatype for tabular data, and you may work more with them later in the semester or beyond! They are broadly similar to `DataFrames` from `pandas` in Python.\n:::\n\n\n\n\n\n\n\n\n::: {#read-rf .cell execution_count=1}\n``` {.julia .cell-code}\n# Dataset from https://zenodo.org/record/3973015\n# The CSV is read into a DataFrame object, and we specify that it is comma delimited\nforcings_all = CSV.read(\"data/ERF_ssp585_1750-2500.csv\", DataFrame, delim=\",\")\n\n# Separate out the individual components\n# Get total aerosol forcings\nforcing_aerosol_rad = forcings_all[!,\"aerosol-radiation_interactions\"]\nforcing_aerosol_cloud = forcings_all[!,\"aerosol-cloud_interactions\"]\nforcing_aerosol = forcing_aerosol_rad + forcing_aerosol_cloud\n# Calculate non-aerosol forcings from the total.\nforcing_total = forcings_all[!,\"total\"]\nforcing_non_aerosol = forcing_total - forcing_aerosol\n```\n:::\n\n\n\n\n\n\n\n\n\n\nWe can plot the aerosol and non-aerosol forcings below.\n\n\n\n\n\n\n\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\nt = Int64.(forcings_all[!,\"year\"]) # Ensure that years are interpreted as integers\np_forcing = plot(; xlabel=\"Year\", ylabel=\"Radiative Forcing (W/mÂ²)\")\nplot!(p_forcing, t, forcing_aerosol, label=\"Aerosol Forcing\", color=:blue, linewidth=2)\nplot!(p_forcing, t, forcing_non_aerosol, label=\"Non-Aerosol Forcing\", color=:red, linewidth=2)\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n![](hw02_files/figure-pdf/cell-5-output-1.svg){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n::: {.cell .markdown}\n\n**In this problem**:\n\n* Discretize the EBM to produce a simulation model of global mean temperatures $T$ over time as a result of total radiative forcings $F$.\n* Simulate global mean temperature anomalies (in $^\\circ C$ relative to 1750) from your model using the historical and SSP5-8.5 radiative forcing data. Use an annual time step for the simulation (in seconds: $\\Delta t = 31,558,152 \\mathrm{s}$). You can assume $T(0) = 0^\\circ C$.\n* Plot your simulated global mean temperature anomalies from 1750 through 2100.\n:::\n\n::: {.cell .markdown}\n### Problem 3 (10 points)\n\n**This problem is only required for students in BEE 5750**.\n\nConsider the lake eutrophication example from [Lecture 04](https://viveks.me/environmental-systems-analysis/slides/lecture04-eutrophication-modeling.html#/title-slide). Suppose that phosphorous is also atmospherically deposited onto the lake surface at a rate of $1.6 \\times 10^{-4} \\mathrm{kg/(yr} \\cdot \\mathrm{m}^2)$, which is then instantly mixed into the lake. Derive a model for the lake phosphorous concentration and find the maximum allowable point source phosphorous loading if the goal is to keep lake concentrations below 0.02 mg/L.\n\n:::\n\n::: {.cell .markdown}\n## References\n\nList any external references consulted, including classmates.\n:::\n\n",
    "supporting": [
      "hw02_files/figure-pdf"
    ],
    "filters": []
  }
}