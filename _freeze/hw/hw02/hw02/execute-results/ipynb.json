{
  "hash": "73ba93707c776d0383be67e62002b576",
  "result": {
    "markdown": "---\ntitle: 'BEE 4750 Homework 2: Gaussian Plumes'\nformat:\n  html:\n    warning: true\n    error: true\n  ipynb:\n    warning: true\n    error: true\n    code-annotation: below\nformat-links: []\n---\n\n::: {.content-visible when-format=\"ipynb\"}\n**Name**:\n\n**ID**:\n:::\n\n::: {.callout-important icon=false}\n### Due Date\n\nFriday, 9/22/23, 9:00pm\n:::\n\n::: {.content-visible when-format=\"html\"}\n\n:::{.callout-caution}\n\nIf you are enrolled in the course, make sure that you use the GitHub Classroom link provided in Ed Discussion, or you may not be able to get help if you run into problems.\n\nOtherwise, you can [find the Github repository here]({{< var github_org.repo >}}/hw02).\n\n:::\n\n:::\n\n## Overview\n\n### Instructions\n\n- Problems 1-3 consist of a series of code snippets for you to interpret and debug. For Problems 1 and 2, you will be asked to identify relevant error(s) and fix the code. For Problem 3, the code works as intended; your goal is to identify the code's purpose by following its logic.\n- Problem 4 asks you to convert a verbal description of a wastewater treatment system into a Julia function, and then to use that function to explore the impact of different wastewater allocation strategies.\n\n### Load Environment\n\nThe following code loads the environment and makes sure all needed packages are installed. This should be at the start of most Julia scripts.\n\n::: {#87a3c878 .cell execution_count=1}\n``` {.julia .cell-code}\nimport Pkg\nPkg.activate(@__DIR__)\nPkg.instantiate()\n```\n:::\n\n\n::: {#c7d6d3af .cell execution_count=2}\n``` {.julia .cell-code}\nusing Plots\nusing LaTeXStrings\nusing DataFrames\n```\n:::\n\n\n## Problems (Total: 100 Points)\n\n::: {.cell .markdown}\n### Problem 1 (40 points)\n\nA ground-level receptor is located 1.5 km downwind from the center-line of a chimney emitting 2 kg/s of SO~2~. The chimney is 100m high and the plume initially rises another 10m being advected downwind. We want to know what \n:::\n\n::: {.cell .markdown}\n\n#### Problem 1.1 (20 points)\n\nWrite a function `gaussian_plume` to simulate the SO~2~ concentration at ground level (mg/m^3^). The `gaussian_plume` function should accept the following inputs:\n\n- the displacement from the source $x$ and $y$, where $x$ is the distance downwind (km) and $y$ is the distance crosswind (km);\n- the wind speed $u$ (m/s);\n- the SO~2~ emissions rate $Q$ (g/s);\n- the effective height of the source $H$ (m);\n- the atmospheric stability class (1--6);\n- the table of dispersion coefficients `turb_coef`, which is provided for you below as a [`DataFrame`](https://dataframes.juliadata.org/stable/).\n:::\n\n::: {#2cd98e5a .cell execution_count=3}\n``` {.julia .cell-code}\n# set up coefficients in matrix form\nturb_coef = [\n    213.0  440.8 1.041 9.27  459.7 2.094 -9.6\n    156.0  106.6 1.149 3.3   108.2 1.098 2.0\n    104.0  61.0  0.911 0.0   61.0  0.911 0.0\n    68.0   33.2  0.725 -1.7  44.5  0.516 -13.0\n    50.5   22.8  0.675 -1.3  55.4  0.305 -34.0\n    34.0   14.35 0.740 -0.35 62.6  0.180 -48.6 \n]\n# now convert to DataFrame with names\n# column names ending with 1 refer to coefficients for x < 1km, column names ending with 2 refer to coefficients for x > 1km \nturb_coef = DataFrame(turb_coef, [\"a\", \"c1\", \"d1\", \"f1\", \"c2\", \"d2\", \"f2\"])\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div><div style = \"float: left;\"><span>6Ã—7 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">a</th><th style = \"text-align: left;\">c1</th><th style = \"text-align: left;\">d1</th><th style = \"text-align: left;\">f1</th><th style = \"text-align: left;\">c2</th><th style = \"text-align: left;\">d2</th><th style = \"text-align: left;\">f2</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">213.0</td><td style = \"text-align: right;\">440.8</td><td style = \"text-align: right;\">1.041</td><td style = \"text-align: right;\">9.27</td><td style = \"text-align: right;\">459.7</td><td style = \"text-align: right;\">2.094</td><td style = \"text-align: right;\">-9.6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">156.0</td><td style = \"text-align: right;\">106.6</td><td style = \"text-align: right;\">1.149</td><td style = \"text-align: right;\">3.3</td><td style = \"text-align: right;\">108.2</td><td style = \"text-align: right;\">1.098</td><td style = \"text-align: right;\">2.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">104.0</td><td style = \"text-align: right;\">61.0</td><td style = \"text-align: right;\">0.911</td><td style = \"text-align: right;\">0.0</td><td style = \"text-align: right;\">61.0</td><td style = \"text-align: right;\">0.911</td><td style = \"text-align: right;\">0.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">68.0</td><td style = \"text-align: right;\">33.2</td><td style = \"text-align: right;\">0.725</td><td style = \"text-align: right;\">-1.7</td><td style = \"text-align: right;\">44.5</td><td style = \"text-align: right;\">0.516</td><td style = \"text-align: right;\">-13.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">50.5</td><td style = \"text-align: right;\">22.8</td><td style = \"text-align: right;\">0.675</td><td style = \"text-align: right;\">-1.3</td><td style = \"text-align: right;\">55.4</td><td style = \"text-align: right;\">0.305</td><td style = \"text-align: right;\">-34.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">34.0</td><td style = \"text-align: right;\">14.35</td><td style = \"text-align: right;\">0.74</td><td style = \"text-align: right;\">-0.35</td><td style = \"text-align: right;\">62.6</td><td style = \"text-align: right;\">0.18</td><td style = \"text-align: right;\">-48.6</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n::: {.callout-note}\n## DataFrames\n\nA `DataFrame` is the standard data structure in Julia for working with tabular data (if you've used Python, you can compare it to `pandas`). Since `turb_coef` is a `DataFrame`, you can access elements with syntax like `turb_coef[1, :c]` (to access the first element of a column named `c`).\n:::\n\n::: {.callout-important}\n## Pass Data To Functions When Possible\n\nRemember to pass `turb_coef` to `gaussian_plums` as an argument --- this is generally good Julia (and broader programming) style and improves performance.\n:::\n\n::: {.cell .markdown}\n#### Problem 1.2 (10 points)\n\nAssume the wind is blowing at 5 m/s. Use your function to calculate the SO~2~ concentration 600 m downwind, both along the centerline and 1 km crosswind, for the neutral (cloudy-day) atmospheric stability class (D/4).\n:::\n\n::: {.cell .markdown}\n### Problem 1.3 (10 points)\n\nFind the exposure standard in the United States for SO~2~ (**make sure to cite where you found it!**). How do your results from Problem 1.2 compare?\n:::\n\n::: {.cell .markdown}\n### Problem 2 (35 points)\n:::\n\n::: {.cell .markdown}\n#### Problem 2.1 (10 points)\n\nPlot (using s [`heatmap`](https://viveks.me/environmental-systems-analysis/tutorials/julia-basics.html#comprehensions)) the SO~2~ concentration over a 5km downwind by 5km crosswind (relative to the plume source) region for the neutral (cloudy-day) atmospheric stability class (D/4). \n\n::: {.callout-tip}\n## Using Comprehensions to Apply Functions Across Inputs\n\nWriting loops in Julia outside of functions can be finicky due to issues of scope (the details aren't important, but this has to do with how Julia compiles code for performance). A solution is to use a [comprehension](https://viveks.me/environmental-systems-analysis/tutorials/julia-basics.html#comprehensions). For example, to apply a function `f` over all combinations of two vectors `x` and `y`,\n\n```julia\n[f(i, j) for i in x for j in y]\n```\nwill return a 2d array of outputs of `f`.\n:::\n\n:::\n\n::: {.cell .markdown}\n#### Problem 2.2 (10 points)\n\nMake the same plot for each stability class.\n:::\n\n::: {.cell .markdown}\n#### Problem 2.3 (10 points)\n\nFor the neutral stability class, make the same plot for the following wind speeds: 5m/s, 10m/s, 15m/s, 20m/s.\n:::\n\n::: {.cell .markdown}\n#### Problem 2.4 (5 points)\n\nCompare your results from Problems 2.2 and 2.3, What can you conclude about the impact of atmospheric stability vs. wind speed for pollutant dispersion?\n:::\n\n::: {.cell .markdown}\n### Problem 3 (25 points)\n\nSuppose we have two sources, with the following characteristics (distance relative to a ground-level receptor):\n\n| Emissions rate (kg/s) | Height (m) | Initial Plume Rise (m) | Upwind Distance (km) | Crosswind Distance (km)|\n|----:|----:|----:|----:|----:|\n| 1.2 | 75 | 10 | 1.5 | 2 |\n| 1 | 60 | 15 | 0.75 | 1 |\n\n:::\n\n::: {.cell .markdown}\n#### Problem 3.1 (15 points)\n\nIf the wind blows at 10 m/s, what is the worst possible concentration of SO~2~ at the receptor? Under what atmospheric conditions might these occur?\n:::\n\n::: {.cell .markdown}\n#### Problem 3.2 (10 points)\n\nHow does this compare to the exposure standard you found for Problem 1.3? If a control is needed, what information might you need to make a decision about how to allocate those reductions across the two sources? \n:::\n\n---\njupyter:\n  kernelspec:\n    display_name: Julia 1.9.2\n    language: julia\n    name: julia-1.9\n  language_info:\n    file_extension: .jl\n    mimetype: application/julia\n    name: julia\n    version: 1.9.2\n---\n",
    "supporting": [
      "hw02_files/figure-ipynb"
    ],
    "filters": []
  }
}